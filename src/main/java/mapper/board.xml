<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.meetup.web.board">
	
	<!-- 게시판 총 데이터 수 조회(crewNo 조건) -->
	<select id="selectAllBoardByCrewNoCnt" resultType="int">
		SELECT count(*) as cnt FROM board
		WHERE crewNo=#{crewNo}
	</select>
	<!-- 게시판 총 데이터 수 조회 -->	
	<select id="selectAllBoardCount" parameterType="int" resultType="int">
		SELECT count(*) as cnt FROM board
		   where boardStatus !=0 AND crewNo = #{crewNo} 
	</select>
	<!-- 게시판 총 데이터 수 조회(BoardCategoryNo 조건) -->		
	<select id="selectAllBoardByBoardCategoryNo" parameterType="Hashmap" resultType="int">
		SELECT count(*) as cnt FROM board
		where boardCategoryNo =#{boardCategoryNo} and boardStatus !=0  AND crewNo = #{crewNo} 
	</select>
	
	<!-- 게시판 모임별 모든 게시글 조회 -->
	<select id="selectAllBoardBycrewNo" parameterType="HashMap"	resultType="BoardVO">
		SELECT b.boardNo, b.crewNo, b.boardCategoryNo, b.memberNo, b.boardTitle, b.boardContent, b.boardHit, b.boardStatus, b.createdAt, b.updatedAt 
		FROM board b
        LEFT JOIN board_category c ON b.boardCategoryNo = c.boardCategoryNo
        LEFT JOIN board_img i ON b.boardNo = i.boardNo
        LEFT JOIN crew cc ON b.crewNo = cc.crewNo
        LEFT JOIN member m ON b.memberNo = m.memberNo
        WHERE b.crewNo = #{crewNo}
		ORDER BY boardNo DESC
		LIMIT #{recordPerPage} OFFSET #{startNo}
	</select>
		
	<!-- 게시판 카테고리 조회 -->	
	<select id="selectAllBoardCategory" resultType="BoardCategoryVO">
		SELECT boardCategoryNo, boardCategoryName, createdAt
		FROM  board_category
		ORDER BY boardCategoryNo
	</select>	
	
	<!-- 게시판 카테고리별 모든 게시글 조회 -->
	 <select id="selectBoardByCategory" parameterType="HashMap" resultType="BoardVO">
		SELECT b.boardNo, b.crewNo, b.boardCategoryNo, b.memberNo, b.boardTitle, b.boardContent, b.boardHit, b.boardStatus, b.createdAt, b.updatedAt
        FROM board b
        LEFT JOIN board_category bc ON b.boardCategoryNo = bc.boardCategoryNo
        LEFT JOIN board_img i ON b.boardNo = i.boardNo
        LEFT JOIN crew c ON b.crewNo = c.crewNo
        LEFT JOIN member m ON b.memberNo = m.memberNo
        WHERE b.boardCategoryNo = #{boardCategoryNo} and boardStatus !=0 AND b.crewNo = #{crewNo} 
        LIMIT #{recordPerPage} OFFSET #{startNo}
    </select>
    <!-- 전체  -->
    <select id="selectBoardAll" parameterType="HashMap" resultType="BoardVO">
		SELECT b.boardNo, b.crewNo, b.boardCategoryNo, b.memberNo, b.boardTitle, b.boardContent, b.boardHit, b.boardStatus, b.createdAt, b.updatedAt
        FROM board b
        LEFT JOIN crew c ON b.crewNo = c.crewNo
        LEFT JOIN board_img i ON b.boardNo = i.boardNo
        LEFT JOIN crew cc ON b.crewNo = cc.crewNo
        LEFT JOIN member m ON b.memberNo = m.memberNo
        WHERE boardStatus !=0  AND b.crewNo = #{crewNo} 
        LIMIT #{recordPerPage} OFFSET #{startNo}
    </select>
	
	<!-- 게시글 1건 조회 -->
	<select id="selectOneBoard" parameterType="int" resultType="BoardVO">
		SELECT boardNo, crewNo, boardCategoryNo, memberNo, boardTitle, boardContent, boardHit, boardStatus, createdAt, updatedAt
		FROM board
		WHERE boardNo = #{boardNo}
	</select>
	
	<!-- 게시글 작성 -->
	<insert id="addOneBoard" parameterType="BoardVO">
		INSERT INTO board(crewNo, memberNo, boardCategoryNo, boardTitle, boardContent ,boardStatus)
		VALUES(#{crewNo}, #{memberNo}, #{boardCategoryNo}, #{boardTitle}, #{boardContent},#{boardStatus} )
		
	</insert>

	
	<!-- 게시글 수정 -->
	<update id="updateOneBoard" parameterType="BoardVO">
	    UPDATE board
	    SET 
	        boardTitle = #{boardTitle},
	        boardContent = #{boardContent}
	    WHERE boardNo = #{boardNo}
	</update>
	
	<!-- 게시글 삭제(update) -->
	<delete id="deleteOneBoard" parameterType="Hashmap">
		UPDATE board
		SET boardStatus = 0
		WHERE boardNo = #{boardNo}
	</delete>
	
	<!-- 게시글 조회수 1 증가 -->
	<update id="raiseHitBoard" parameterType="int">
		UPDATE board
		SET boardHit = boardHit + 1
		WHERE boardNo = #{boardNo}
	</update>
		
	<!-- 댓글 작성 -->
	<insert id="addOneComment" parameterType="BoardCommentVO">
		INSERT INTO board_comment(boardNo, memberNo, boardCommentContent, boardCommentStatus)
		VALUES(#{boardNo}, #{memberNo}, #{boardCommentContent},#{boardCommentStatus})
	</insert>
	
	<!-- 댓글 목록 조회 -->
	<select id="selectComment" parameterType="int" resultType="BoardCommentVO">
		SELECT m.memberNickname, bc.memberNo, bc.boardCommentNo, bc.boardCommentContent, bc.createdAt
		FROM board_comment bc
		JOIN member m on bc.memberNo = m.memberNo
		WHERE bc.boardNo = #{boardNo} and boardCommentStatus = 1
	</select>
	
	<!-- 댓글 1건 조회 -->
	<select id="selectOneBoardComment" parameterType="int" resultType="BoardCommentVO">
		SELECT boardCommentNo, boardNo, memberNo, boardCommentPno, boardCommentContent, boardCommentStatus, createdAt
		FROM board_comment
		WHERE boardCommentNo = #{boardCommentNo}
	</select>	
	
	<!-- 댓글 수정 -->
	<update id="updateOneBoardComment" parameterType="BoardCommentVO">
	    UPDATE board_comment
	    SET boardCommentContent = #{boardCommentContent}
	    WHERE boardCommentNo = #{boardCommentNo}
	</update>
	
	<!-- 댓글 삭제(update) -->
	<update id="deleteOneBoardComment" parameterType="int">
	    UPDATE board_comment
	    SET boardCommentStatus = 0
	    WHERE boardCommentNo = #{boardCommentNo}
	</update>
</mapper>